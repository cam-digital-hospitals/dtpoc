apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: {{ .Release.Namespace }}
data:
  telegraf.conf: |
    [global_tags]
      dc = "eu-west-2"

    [agent]
      interval = "10s"
      round_interval = true
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_jitter = "0s"
      precision = ""
      debug = false
      quiet = false
      logfile = ""
    
    [[inputs.mqtt_consumer]]
      servers = ["tcp://mqtt.docker.local:1883"]
      topics = ["CamDT/DC1/IfM/#"]
      data_format = "json_v2"
      topic_tag = ""
      qos = 1
    
    [[inputs.mqtt_consumer.json_v2]]
      measurement_name = "temperature_reading"
      # A string with valid GJSON path syntax to a valid timestamp (single value)
      timestamp_path = "timestamp"
      # A string with a valid timestamp format (see below for possible values)
      timestamp_format = "2006-01-02T15:04:05.999-07:00" 

      [[inputs.mqtt_consumer.json_v2.field]]
        path = "temp" # A string with valid GJSON path syntax
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AlertVal" # A string with valid GJSON path syntax
        type = "float"
      [[inputs.mqtt_consumer.json_v2.tag]]
        path = "machine" # A string with valid GJSON path syntax
        type = "string"
      [[inputs.mqtt_consumer.json_v2.tag]]
        path = "Threshold" # A string with valid GJSON path syntax
        type = "float"
      [[inputs.mqtt_consumer.json_v2.tag]]
        path = "sensor" # A string with valid GJSON path syntax
        type = "string"
    
    [[outputs.file]]
      files = ["stdout"]

    [[outputs.influxdb_v2]]
      urls = ["http://influxdb.default.svc.cluster.local:8086"]
      token = "super-secret-token"
      organization = "camdt"
      bucket = "default"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - name: telegraf
        image: telegraf:latest
        volumeMounts:
        - name: telegraf-config
          mountPath: /etc/telegraf/telegraf.conf
          subPath: telegraf.conf
      volumes:
      - name: telegraf-config
        configMap:
          name: telegraf-config